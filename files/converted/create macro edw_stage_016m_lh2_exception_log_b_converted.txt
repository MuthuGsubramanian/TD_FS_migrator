CREATE OR REPLACE PROCEDURE "EDW_STAGE_016"."M_LH2_EXCEPTION_LOG_B"()
RETURNS VARCHAR(16777216)
LANGUAGE JAVASCRIPT
STRICT
EXECUTE AS OWNER// CREATE/CHANGE LOG : 
// DATE                  MOD BY                               GCC                           DESC
2020-01-09              TD_SF_Engine                          initial                      macro
//     **********************************************************************************************

AS
 $$
try {var_sql_merge_base = `merge into edw_target.lh2_exception_log_b as tgt 
using 
( 
select  
	stg.orig_src_id ,  
	stg.site_code ,  
	stg.exception_log_id ,  
	stg.shiftid as shiftid ,  
	stg.shiftdate as shiftdate ,  
	stg.shiftindex  as shiftindex , 
	stg.exception_log_timestamp ,  
	coalesce(stg.messagebody,' ') as messagebody ,  
	stg.src_change_id ,  
	stg.dw_logical_delete_flag ,  
	stg.dw_modify_ts ,  
	stg.dw_load_ts   
from   edw_stage_016.lh2_exception_log as stg
where stg.change_type in ('I','U')
) as stg 
on ( stg.site_code = tgt.site_code and 
stg.exception_log_id = tgt.exception_log_id)

when matched then 
update set 
orig_src_id =  stg.orig_src_id , 
shiftid = stg.shiftid,
shiftdate = stg.shiftdate,
shiftindex = stg.shiftindex,
exception_log_timestamp =  stg.exception_log_timestamp , 
messagebody =  stg.messagebody , 
src_change_id =  stg.src_change_id , 
dw_logical_delete_flag =  stg.dw_logical_delete_flag , 
dw_modify_ts =  stg.dw_modify_ts 

when not matched then 
insert values (
	stg.orig_src_id , 
	stg.site_code , 
	stg.exception_log_id , 
	stg.shiftid,
	stg.shiftdate,
	stg.shiftindex,
	stg.exception_log_timestamp , 
	stg.messagebody , 
	stg.src_change_id , 
	stg.dw_logical_delete_flag , 
	stg.dw_modify_ts , 
	stg.dw_load_ts
';

snowflake.execute( {sqlText: var_sql_merge_base + ";"} ); 


var_sql_logical_delete_capture = 'update  edw_target.lh2_exception_log_b  
set 
dw_logical_delete_flag = stg.dw_logical_delete_flag , 
dw_modify_ts = stg. dw_modify_ts 
  from 
( select 
stg.site_code , 
stg.exception_log_id ,   
CASE  
		WHEN stg.change_type IN('D')     THEN
                      CASE 
                      WHEN stg.shiftdate<(CURRENT_DATE-170) THEN 'A' 
                      ELSE 'Y' ---handles  regular delete 
                      END               
    	ELSE 'U'---- for change type not in (i,u,d)
END as dw_logical_delete_flag,
stg.dw_modify_ts ,
stg.change_type
from edw_stage_016 .lh2_exception_log stg 
) as stg 
where 
stg.site_code = edw_target.lh2_exception_log_b.site_code and  
 stg.exception_log_id = edw_target.lh2_exception_log_b.exception_log_id and 
 stg.change_type ='D' ;
);
`
snowflake.execute( {sqlText: var_sql_logical_delete_capture + ";"} ); 

 }
catch (err)
     {
     return "Failed: " + err;   
     }
     $$;