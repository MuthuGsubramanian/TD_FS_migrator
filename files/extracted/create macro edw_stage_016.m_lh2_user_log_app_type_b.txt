--------------------------------------------------------------------------------



"Request Text"

create  macro edw_stage_016.m_lh2_user_log_app_type_b

as

(

merge into edw_target.lh2_user_log_app_type_b as tgt 

using 

( 

select  

	stg.orig_src_id ,  

	stg.site_code ,  

	stg.app_type_id ,  

	coalesce(stg.app_type_name,' ') as app_type_name ,  

	stg.src_change_id ,  

	stg.dw_logical_delete_flag ,  

	stg.dw_modify_ts ,  

	stg.dw_load_ts   

from   edw_stage_016.lh2_user_log_app_type as stg     

where stg.change_type in ('I','U')

) as stg 

on ( stg.site_code = tgt.site_code and 

stg.app_type_id = tgt.app_type_id)



when matched then 

update set 

orig_src_id =  stg.orig_src_id , 

app_type_name =  stg.app_type_name , 

src_change_id =  stg.src_change_id , 

dw_logical_delete_flag =  stg.dw_logical_delete_flag , 

dw_modify_ts =  stg.dw_modify_ts 



when not matched then 

insert values (

stg.orig_src_id , 

stg.site_code , 

stg.app_type_id , 

stg.app_type_name , 

stg.src_change_id , 

stg.dw_logical_delete_flag , 

stg.dw_modify_ts , 

stg.dw_load_ts);

--  step 2 ( for  deleted  records)

--  it  is based on incrementaly  loaded records in  stage

--  includes all the change type   ---   d

update  edw_target.lh2_user_log_app_type_b  

from edw_stage_016 .lh2_user_log_app_type stg 

set 

dw_logical_delete_flag = stg.dw_logical_delete_flag , 

dw_modify_ts = stg. dw_modify_ts 

where 

stg.site_code = edw_target.lh2_user_log_app_type_b.site_code and  

stg.site_code = edw_target.lh2_user_log_app_type_b.site_code and  

stg.app_type_id = edw_target.lh2_user_log_app_type_b.app_type_id

and  stg.change_type ='D' ;

);

