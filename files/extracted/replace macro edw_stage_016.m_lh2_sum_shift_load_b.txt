
"Request Text"
replace macro  edw_stage_016.m_lh2_sum_shift_load_b
as
(
merge into edw_target.lh2_sum_shift_load_b as tgt 
using 
( 
select  
 stg.orig_src_id ,  
 stg.site_code ,  
 stg.sum_shift_load_id ,  
 stg.shiftid ,
  stg.timespot ,  
(cast (date '1970-01-01' +  cast (floor( cast ( timespot  as float) / 86400) as integer) as timestamp (0))
+ (  (  ( cast ( timespot   as number) mod cast (86400 as number) )) * interval '00:00:01' hour to second))   as timespot_ts,
 stg.emptytravelnwtime ,  
 stg.queuenwtime ,  
 stg.spotnwtime ,  
 stg.loadingnwtime ,  
 stg.truckidletime ,  
 stg.shovelidletime ,  
 stg.prevdumpid ,  
 stg.nextdumpid ,  
 stg.truckassigntimestamp ,  
 stg.truckoperid ,  
 stg.excavoperid ,
stg.src_change_id ,  
 stg.dw_logical_delete_flag ,  
 stg.dw_modify_ts ,  
 stg.dw_load_ts   
from edw_stage_016 .lh2_sum_shift_load stg 
where stg.change_type in ('I','U')
) as stg 
on ( stg.site_code = tgt.site_code and 
stg.sum_shift_load_id = tgt.sum_shift_load_id)

when matched then 
update set 
 orig_src_id =  stg.orig_src_id , 
  shiftid = stg.shiftid ,
 timespot =  stg.timespot , 
 timespot_ts =  stg.timespot_ts , 
 emptytravelnwtime =  stg.emptytravelnwtime , 
 queuenwtime =  stg.queuenwtime , 
 spotnwtime =  stg.spotnwtime , 
 loadingnwtime =  stg.loadingnwtime , 
 truckidletime =  stg.truckidletime , 
 shovelidletime =  stg.shovelidletime , 
 prevdumpid =  stg.prevdumpid , 
 nextdumpid =  stg.nextdumpid , 
 truckassigntimestamp =  stg.truckassigntimestamp , 
 truckoperid =  stg.truckoperid , 
 excavoperid =  stg.excavoperid , 
 src_change_id =  stg.src_change_id , 
 dw_logical_delete_flag =  stg.dw_logical_delete_flag , 
 dw_modify_ts =  stg.dw_modify_ts 

when not matched then 
insert values (
  stg.orig_src_id , 
  stg.site_code , 
  stg.sum_shift_load_id , 
  stg.shiftid ,
  stg.timespot , 
  stg.timespot_ts , 
  stg.emptytravelnwtime , 
  stg.queuenwtime , 
  stg.spotnwtime , 
  stg.loadingnwtime , 
  stg.truckidletime , 
  stg.shovelidletime , 
  stg.prevdumpid , 
  stg.nextdumpid , 
  stg.truckassigntimestamp , 
  stg.truckoperid , 
  stg.excavoperid , 
  stg.src_change_id , 
  stg.dw_logical_delete_flag , 
  stg.dw_modify_ts , 
  stg.dw_load_ts);
--  step 2 ( for  deleted  records)
--  it  is based on incrementaly  loaded records in  stage
--  includes all the change type   ---   d
update  edw_target.lh2_sum_shift_load_b  
from 
( select stg.site_code , 
stg.sum_shift_load_id ,   
case  when stg.change_type in('D')     then
                      case 
                      when shift_info.shiftdate<(current_date-170) then 'A' 
                      else 'Y' ---handles  regular delete 
                      end               
    else 'U'---- for change type not in (i,u,d)
end as dw_logical_delete_flag,
stg.dw_modify_ts,  
stg.change_type 
from edw_stage_016 .lh2_sum_shift_load stg 
left outer join pddw.lh2_shift_info shift_info
on (stg.site_code = shift_info.site_code and 
  stg.shiftid  = shift_info.shiftid) 
) as stg 
set 
dw_logical_delete_flag = stg.dw_logical_delete_flag , 
dw_modify_ts = stg. dw_modify_ts 
where 
stg.site_code = edw_target.lh2_sum_shift_load_b.site_code and  
stg.sum_shift_load_id = edw_target.lh2_sum_shift_load_b.sum_shift_load_id and  
stg.change_type ='D' ;
);
